<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="akka"
             type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Collections.Immutable" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.1.0" newVersion="1.2.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <akka>
    <hocon>
      <![CDATA[
          akka {
            persistence {
		            journal {
			            plugin = "akka.persistence.journal.sql-server"
			            sql-server {
				            class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
				            plugin-dispatcher = "akka.actor.default-dispatcher"
				            connection-string = "server=pssqldev; database=ps_akka_test; user=ps_akka_test_login; password=ps_akka_test_Pa$$wd!1"
				            schema-name = dbo
				            table-name = EventJournal
				            auto-initialize = on
				            timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
				            metadata-table-name = metadata_table
			            }
		            }
                snapshot-store {
                    plugin = "akka.persistence.snapshot-store.sql-server"
                    sql-server {

                        class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
                        connection-string = "server=pssqldev; database=ps_akka_test; user=ps_akka_test_login; password=ps_akka_test_Pa$$wd!1"
                        schema-name = dbo
                        auto-initialize = on
                    }
                }
	            }
              actor {
                provider = "Akka.Remote.RemoteActorRefProvider, Akka.Remote"
              }
              remote {
                helios.tcp {
                  transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote" 
                  transport-protocol = tcp
                  port = 8081 
                  hostname= "pswintst"
                }
              }
            }

      ]]>
    </hocon>
  </akka>
</configuration>
